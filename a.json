{
  entry: {
    main: './src/main',
    vendors: [
      'vue',
      'vue-router'
    ]
  },
  output: {
    path: 'F:\\SPA\\dist',
    publicPath: './dist/',
    filename: '[name].[hash].js',
    chunkFilename: '[name].[hash].chunk.js'
  },
  module: {
    loaders: [
      [
        Object
      ],
      [
        Object
      ],
      [
        Object
      ],
      [
        Object
      ],
      [
        Object
      ],
      [
        Object
      ]
    ]
  },
  babel: {
    presets: [
      'es2015'
    ],
    plugins: [
      'transform-runtime'
    ]
  },
  resolve: {
    extensions: [
      '',
      '.js',
      '.vue'
    ],
    alias: {
      filter: 'F:\\SPA\\src\\filters',
      components: 'F:\\SPA\\src\\components',
      vue: 'vue/dist/vue.js'
    }
  },
  plugins: [
    ExtractTextPlugin
    {
      filename: '[name].[hash].css',
      options: [
        Object
      ],
      id: 1
    },
    CommonsChunkPlugin
    {
      chunkNames: 'vendors',
      filenameTemplate: 'vendors.[hash].js',
      minChunks: undefined,
      selectedChunks: undefined,
      ident: 'F:\\SPA\\node_modules\\.npminstall\\webpack\\1.13.2\\webpack\\lib\\optimize\\CommonsChunkPlugin.js0'
    },
    DefinePlugin
    {
      definitions: [
        Object
      ]
    },
    UglifyJsPlugin
    {
      options: [
        Object
      ]
    },
    HtmlWebpackPlugin
    {
      options: [
        Object
      ]
    }
  ],
  externals: {
    AMap: 'window.AMap',
    Strophe: 'window.Strophe'
  },
  vue: {
    loaders: {
      css: 'F:\\SPA\\node_modules\\.npminstall\\extract-text-webpack-plugin\\1.0.1\\extract-text-webpack-plugin\\loader.js?{"omit":1,"extract":true,"remov
      e
      ":true,"
      publicPath
      ":"
      .
      .
      /
      dist
      /
      "}!style-loader!css-loader?sourceMap' } } }